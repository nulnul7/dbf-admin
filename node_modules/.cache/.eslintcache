[{"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/index.js":"1","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/App.js":"2","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/AuthContext.js":"3","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/pages/Errorpage.jsx":"4","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/pages/home/Home.js":"5","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/pages/portfolios/PortfoliosUI.jsx":"6","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/pages/Blogs/BlogUI.jsx":"7","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/portfolio_crud/DeletePortfolio.jsx":"8","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/login/Login.jsx":"9","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/blog_crud/DeleteBlog.jsx":"10","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/portfolio_crud/AddPortfolio.jsx":"11","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/portfolio_crud/UpdatePortfolio.jsx":"12","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/blog_crud/UpdateBlog.jsx":"13","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/blog_crud/AddBlog.jsx":"14","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/opening/Opening.jsx":"15","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/sidebar/Sidebar.jsx":"16","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/boxPortf/BoxPortf.jsx":"17","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/hooks/FetchingUrl.jsx":"18"},{"size":499,"mtime":1689837594560,"results":"19","hashOfConfig":"20"},{"size":1477,"mtime":1677729378566,"results":"21","hashOfConfig":"20"},{"size":1503,"mtime":1691125831792,"results":"22","hashOfConfig":"20"},{"size":111,"mtime":1677729378574,"results":"23","hashOfConfig":"20"},{"size":638,"mtime":1691138092601,"results":"24","hashOfConfig":"20"},{"size":2177,"mtime":1691126131240,"results":"25","hashOfConfig":"20"},{"size":2373,"mtime":1677729378574,"results":"26","hashOfConfig":"20"},{"size":1526,"mtime":1677729378573,"results":"27","hashOfConfig":"20"},{"size":2364,"mtime":1691137040927,"results":"28","hashOfConfig":"20"},{"size":1923,"mtime":1677729378570,"results":"29","hashOfConfig":"20"},{"size":6428,"mtime":1691737763142,"results":"30","hashOfConfig":"20"},{"size":4862,"mtime":1677729378573,"results":"31","hashOfConfig":"20"},{"size":8575,"mtime":1677729378570,"results":"32","hashOfConfig":"20"},{"size":6937,"mtime":1677729378570,"results":"33","hashOfConfig":"20"},{"size":1801,"mtime":1677729378572,"results":"34","hashOfConfig":"20"},{"size":2800,"mtime":1691566549347,"results":"35","hashOfConfig":"20"},{"size":703,"mtime":1677729378570,"results":"36","hashOfConfig":"20"},{"size":3350,"mtime":1677729378574,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"fh9cgs",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/index.js",[],[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/App.js",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/AuthContext.js",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/pages/Errorpage.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/pages/home/Home.js",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/pages/portfolios/PortfoliosUI.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/pages/Blogs/BlogUI.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/portfolio_crud/DeletePortfolio.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/login/Login.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/blog_crud/DeleteBlog.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/portfolio_crud/AddPortfolio.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/portfolio_crud/UpdatePortfolio.jsx",[],["95"],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/blog_crud/UpdateBlog.jsx",["96"],["97"],"import { useState, useRef } from \"react\";\nimport Sidebar from \"../sidebar/Sidebar\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport './blog.css';\nimport loadingPict from \"../../assets/LoadingBunny.gif\";\n\nconst UpdateBlog = () => {\n\n    const [updateBlog, setUpdateBlog] = useState({});\n    const [blogPhotos, setBlogPhotos] = useState({});\n    const [idBlog, setIdBlog] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [loading, setLoading] = useState(false)\n    const [indicatorNumber, setIndicatorNumber] = useState(10)\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const id = useRef(location.state.id); // useRef biar tidak reRender Dom\n    const { current } = id;\n\n    useEffect(() => {\n        setIdBlog(current);\n        try {\n            const getBlogData = async () => {\n                const blog = await axios.get(`http://localhost:5500/5R2I/blog/${current}`);\n                setUpdateBlog(blog.data);\n                setBlogPhotos(blog.data.photos)\n                console.log(blog.data, 'isi blog');\n            }\n            getBlogData()\n            console.log('isi photos', blogPhotos);\n        } catch (error) {\n            console.log(error);\n        }\n\n        // eslint-disable-next-line\n    }, [current]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        //loading info\n        const options = {\n            onUploadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                let precentage = Math.floor((loaded * 100) / total);\n                console.log('options', precentage);\n                setIndicatorNumber(precentage)\n                precentage !== 100 ? setLoading(true) : setLoading(false)\n            },\n        };\n\n        try {\n            const updatePhotos = await Promise.all(\n                Object.values(blogPhotos).map(async (photo) => {\n                    const updateForm = new FormData();\n                    updateForm.append(\"file\", photo);\n                    updateForm.append(\"upload_preset\", \"blogImages\");\n                    const sendBlog = await axios.post(\n                        \"https://api.cloudinary.com/v1_1/mangga/image/upload\",\n                        updateForm,\n                        options\n                    );\n                    return sendBlog.data.url   // Blog URL from cloudinary\n                })\n            );\n\n            const { title, glance, content, author, category } = updateBlog;\n            const updateData = { title, glance, content, author, photos: updatePhotos, category }\n\n            await axios.put(`http://localhost:5500/5R2I/blog/update/${current}`, updateData)\n            navigate('/getBlog')\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setUpdateBlog((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n    };\n    const { title, glance, content, author } = updateBlog\n    // const getPhoto = (\n    //     updateBlog.photos.map(photo => {\n    //         return { photo }\n    //     })\n    // )\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"wrapper\">\n                <Sidebar />\n                <div className=\"contentWrapper\">\n                    <div className=\"addPortHeader\">Update Blog</div>\n                    {\n                        loading &&\n                        <div className=\"loadingWrapper\">\n                            <div className=\"loader\"></div>\n                            <img src={loadingPict} alt=\"loading pict\" className=\"pictLoader\" />\n                            <div className=\"LoadingNumber\" style={{ width: `${indicatorNumber * 5}px`, backgroundColor: \"greenyellow\" }}>{indicatorNumber}</div>\n                        </div>\n                    }\n                    <div className=\"addPort\">\n                        <form className=\"addPortForm\">\n                            <div className=\"addPortInput\">\n                                <label htmlFor=\"idPortfolio\">Id</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"idPortfolio\"\n                                    value={idBlog}\n                                    name=\"idPortfolio\"\n                                    readOnly\n                                />\n                            </div>\n\n                            <div className=\"addPortInput\">\n                                <label htmlFor=\"title\">Title</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"title\"\n                                    name=\"title\"\n                                    onChange={handleChange}\n                                    defaultValue={title}\n                                    required\n                                />\n                            </div>\n                            <div className=\"addPortInput\">\n                                <label htmlFor=\"glance\">Glance</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"glance\"\n                                    name=\"glance\"\n                                    defaultValue={glance}\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                            <div className='textBlog'>\n                                <label htmlFor=\"content\">Contents</label>\n                                <textarea\n                                    rows=\"10\"\n                                    cols=\"61\"\n                                    id=\"content\"\n                                    name=\"content\"\n                                    value={content}\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n\n                            <div className=\"addPortInput\">\n                                <label htmlFor=\"photos\">Photos</label>\n                                <input\n                                    type=\"file\"\n                                    id=\"photos\"\n                                    name=\"photos\"\n                                    multiple\n                                    onChange={(e) => setBlogPhotos(e.target.files)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"addPortSelect\">\n                                <label htmlFor=\"category\">Category</label>\n                                <select\n                                    id=\"category\"\n                                    name=\"category\"\n                                    className=\"addPortSelect\"\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                    <optgroup label=\"Blog category\">\n                                        <option value=\"design\">Graphic Design</option>\n                                        <option value=\"techno\">Web Design</option>\n                                        <option value=\"sports\">Sports</option>\n                                        <option value=\"etcetera\">Etcetera</option>\n                                    </optgroup>\n                                </select>\n                            </div>\n                            <div className=\"addPortInput\">\n                                <label htmlFor=\"author\">Author</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"author\"\n                                    name=\"author\"\n                                    onChange={handleChange}\n                                    defaultValue={author}\n                                />\n                            </div>\n                            <button onClick={handleSubmit} className=\"btnSubmit\">\n                                Update Blog\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default UpdateBlog\n\n\n\n","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/blog_crud/AddBlog.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/opening/Opening.jsx",["98"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport FetchingUrl from \"../../hooks/FetchingUrl\";\nimport \"./opening.css\";\n\nconst Opening = () => {\n\n  const [blogCount, setBlogCount] = useState(null)\n\n  const urlCountPortfolio = \"http://localhost:5500/5R2I/portfolio/find/countByCategory?categories=graphicDesign,webDesign,photography\"\n  const { portfolioCount, error, loading } = FetchingUrl(urlCountPortfolio)\n\n  const getCountBlog = async () => {\n    try {\n      const getBlog = await axios.get('http://localhost:5500/5R2I/blog')\n      setBlogCount(getBlog.data.length);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(()=>{\n    getCountBlog()\n  },[])\n\n  return (\n    <div className=\"OpenContainer\">\n      <div className=\"openWrapper\">\n        {\n          loading ? \"please wait...\" :\n            <>\n              <div className=\"openPortfolio\">\n                <div className=\"boxLine\">\n                  <div className=\"number\">{portfolioCount?.data?.[0]}</div>\n                  <div className=\"openInfo\">Graphic Design</div>\n                </div>\n                <div className=\"boxLine\">\n                  <div className=\"number\">{portfolioCount?.data?.[1]}</div>\n                  <div className=\"openInfo\">Web Design</div>\n                </div>\n                <div className=\"boxLine\">\n                  <div className=\"number\">{portfolioCount?.data?.[2]}</div>\n                  <div className=\"openInfo\">Photography</div>\n                </div>\n              </div>\n            </>\n        }\n        <div className=\"openBlog\">\n          <div className=\"number numberBlog\">{blogCount}</div>\n          <div className=\"openInfo\">{blogCount > 1 ? 'Blogs' : 'Blog'}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Opening;\n","/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/sidebar/Sidebar.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/components/boxPortf/BoxPortf.jsx",[],[],"/Users/erteka/Desktop/react/dbfPortf/dbf-admin/src/hooks/FetchingUrl.jsx",[],[],{"ruleId":"99","severity":1,"message":"100","line":22,"column":6,"nodeType":"101","endLine":22,"endColumn":8,"suggestions":"102","suppressions":"103"},{"ruleId":"104","severity":1,"message":"105","line":14,"column":12,"nodeType":"106","messageId":"107","endLine":14,"endColumn":20},{"ruleId":"99","severity":1,"message":"108","line":39,"column":8,"nodeType":"101","endLine":39,"endColumn":17,"suggestions":"109","suppressions":"110"},{"ruleId":"104","severity":1,"message":"111","line":11,"column":27,"nodeType":"106","messageId":"107","endLine":11,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'current'. Either include it or remove the dependency array.","ArrayExpression",["112"],["113"],"no-unused-vars","'category' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'blogPhotos'. Either include it or remove the dependency array.",["114"],["115"],"'error' is assigned a value but never used.",{"desc":"116","fix":"117"},{"kind":"118","justification":"119"},{"desc":"120","fix":"121"},{"kind":"118","justification":"119"},"Update the dependencies array to be: [current]",{"range":"122","text":"123"},"directive","","Update the dependencies array to be: [blogPhotos, current]",{"range":"124","text":"125"},[740,742],"[current]",[1356,1365],"[blogPhotos, current]"]